class Solution:

    def minCut(self, s: str) -> int:

        matrix = [[-1 for y in range(2000)] for x in range(2000)] 

         
        i = 0
        j = len(s) -1
        
        return self.palPart( s, i , j,matrix)
        
    def palPart( self, s: str,i : int , j: int, matrix:list) -> int:
        
        
        if i >= j:
            return 0
        if self.isPalindrome(s[i:j+1]):
            return 0
        
        if matrix[i][j] != -1:
            return matrix[i][j]
        
        minm = float('inf')
        
        for k in range( i, j):
            temp_ans = 1+ self.palPart(s,i,k,matrix) + self.palPart(s,k+1,j,matrix)
            # print(temp_ans)
            minm = min(temp_ans, minm)
        print(minm)
        matrix[i][j] = minm
        return minm
    
    def isPalindrome(self,s):
        
        i = 0
        j = len(s) -1
        if i == j:
            return True
        while i < j:
            if s[i] != s[j]:
                return False
            i +=1
            j -=1
        
        return True
